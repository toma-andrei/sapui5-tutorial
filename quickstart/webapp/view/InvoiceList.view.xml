<mvc:View
	controllerName="tutorial.controller.InvoiceList"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns="sap.m"
>

<Panel accessibleRole="Region">
	<headerToolbar>
		<Toolbar>
			<Title text="{i18n>invoiceListTitle}"/>
			<ToolbarSpacer/>
			<SearchField width="50%" 
						 search=".onFilterInvoices" 
						 ariaLabelledBy="searchFieldLabel" 
						 ariaDescribedBy="searchFieldDescription"
						 placeholder="{i18n>searchFieldPlaceholder}"/>
						 
		</Toolbar>
	</headerToolbar>

<!-- items instead of "{invoiceee>/Invoices}"" is written in object-notation. This way we can add a sorter to the specified path. -->
<!-- By default, sorter is ascending but a property "descending:true" can be added -->
<!-- SORTS BY THE PRICE OF PRODUCT
	items="{
			path: 'invoiceee>/Invoices',
			sorter: {
				path: 'ExtendedPrice',
				descending: false
			}
		}" -->
	<Table
		headerText="{i18n>invoiceListTitle}"
		id="invoiceListIdentifier"
		class="sapUiResponsiveMargin"
		width="auto"
		items="{
			path: 'invoiceee>/Invoices',
			sorter: {
				path: 'ShipperName',
				descending: false,
				group: true
			}
		}"
	>
		<headerToolbar>
		</headerToolbar>
		<columns>
			<!-- hAling = horizontal align -->
			<!-- minScreenWidth: Small - tells that this column is not important on phones -->
			<!-- demandPopin: true - We will tell the table to display this column below the main column -->
				<Column
					hAlign="End"
					minScreenWidth="Small"
					demandPopin="true"
					width="4em">
					<Text text="{i18n>columnQuantity}"/>
				</Column>
				<Column>
					<Text text="{i18n>columnName}"/>
				</Column>
				<Column
					minScreenWidth="Small"
					demandPopin="true">
					<Text text="{i18n>columnStatus}"/>
				</Column>
				<Column
					minScreenWidth="Tablet"
					demandPopin="false">
					<Text text="{i18n>columnSupplier}"/>
				</Column>
				<Column
					hAlign="End">
					<Text text="{i18n>columnPrice}"/>
				</Column>
			</columns>
			<items>
				<ColumnListItem
					type="Navigation"
					press=".onPress">
					<cells>
						<ObjectNumber number="{invoiceee>Quantity}" emphasized="false"/>
						<ObjectIdentifier title="{invoiceee>ProductName}"/>
						<Text text="{
							path: 'invoiceee>Status',
							formatter: '.formatter.statusText'
						}"/>
						<Text text="{invoiceee>ShipperName}"/>
						<ObjectNumber
							number="{
								parts: [{path: 'invoiceee>ExtendedPrice'}, {path: 'view>/currency'}],
								type: 'sap.ui.model.type.Currency',
								formatOptions: {
									showMeasure: false
								}
							}"
							unit="{view>/currency}"
							state="{= ${invoiceee>ExtendedPrice} > 50 ? 'Error' : 'Success' }"/>
					</cells>
				</ColumnListItem>
			</items>

		<!-- <items> -->
			<!-- the number atribute is saying that the number within this object is formed of 2 parts and values for those parts can be found at specified paths. -->
			<!-- type of number is saying how that number in interpreted as -->
			<!-- numberState is an expression: a special syntax delimited by "{= ... }". Data to be bind in the expresion is written within "${data_to_be_bind}" -->
			<!-- <ObjectListItem
				title="{invoiceee>Quantity} x {invoiceee>ProductName}"
				number="{
					parts: [{
						path: 'invoiceee>ExtendedPrice'
					}],
					type: 'sap.ui.model.type.Currency',
					formatOptions: {
						showMensure: false
					}
				}"
				numberUnit="{view>/currency}"
				numberState="{= ${invoiceee>ExtendedPrice} > 50 ? 'Error' : 'Success' }"
				type="Navigation"
				press="onPress"
			>
				<firstStatus>
					<ObjectStatus text="{
						path: 'invoiceee>Status',
						formatter: '.formatter.statusText'
					}"/>
				</firstStatus>
			</ObjectListItem>
		</items> -->
	</Table>
</Panel>
</mvc:View>